openapi: 3.0.0
info:
  title: NutriLens API
  description: |
    API for NutriLens application

    **BASE URL**
    - Local server: `http://localhost:3000/api`
    - Production server: `https://nutrilens-capstone.et.r.appspot.com/api`
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Local server
  - url: https://nutrilens-capstone.et.r.appspot.com/api
    description: Production server
paths:
  /users/register:
    post:
      summary: Register a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/login:
    post:
      summary: Login user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Invalid email or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/editprofile:
    put:
      summary: Update user profile
      tags:
        - User
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                weight:
                  type: number
                height:
                  type: number
                age:
                  type: integer
                gender:
                  type: string
                activity_level:
                  type: string
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/profile/editemail:
    put:
      summary: Update user email
      tags:
        - User
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        '200':
          description: Email updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/profile/editpassword:
    put:
      summary: Update user password
      tags:
        - User
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
              required:
                - newPassword
      responses:
        '200':
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/profile:
    get:
      summary: Get user profile
      tags:
        - User
      security:
        - jwtAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /nutritions/data:
    get:
      summary: Get all nutrition data
      tags:
        - Nutrition
      responses:
        '200':
          description: Nutrition data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    calories:
                      type: number
                    proteins:
                      type: number
                    fat:
                      type: number
                    carbohydrate:
                      type: number
        '500':
          description: Error reading data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /nutritions/{table}/food/{id}:
    post:
      summary: Add food item to a meal table
      tags:
        - Nutrition
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: table
          required: true
          schema:
            type: string
            enum: [breakfasts, lunchs, dinners]
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Food item added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  food_id:
                    type: integer
                  food_name:
                    type: string
                  calories:
                    type: number
                  proteins:
                    type: number
                  fat:
                    type: number
                  carbohydrate:
                    type: number
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /nutritions/user/foods:
    get:
      summary: Get user food entries in the last 24 hours
      tags:
        - Nutrition
      security:
        - jwtAuth: []
      responses:
        '200':
          description: User food entries retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  Breakfast:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/FoodEntry'
                      total:
                        type: object
                        properties:
                          Carbs:
                            type: number
                          Fat:
                            type: number
                          Prot:
                            type: number
                          Calories:
                            type: number
                  Lunch:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/FoodEntry'
                      total:
                        type: object
                        properties:
                          Carbs:
                            type: number
                          Fat:
                            type: number
                          Prot:
                            type: number
                          Calories:
                            type: number
                  Dinner:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/FoodEntry'
                      total:
                        type: object
                        properties:
                          Carbs:
                            type: number
                          Fat:
                            type: number
                          Prot:
                            type: number
                          Calories:
                            type: number
                  Macros:
                    type: object
                    properties:
                      totalCarbs:
                        type: number
                      totalFat:
                        type: number
                      totalProteins:
                        type: number
                      totalCalories:
                        type: number
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    jwtAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        weight:
          type: number
        height:
          type: number
        age:
          type: integer
        gender:
          type: string
        activity_level:
          type: string
    FoodEntry:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        food_id:
          type: integer
        food_name:
          type: string
        calories:
          type: number
        proteins:
          type: number
        fat:
          type: number
        carbohydrate:
          type: number
    Error:
      type: object
      properties:
        error:
          type: string
